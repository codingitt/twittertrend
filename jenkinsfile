def registry = 'https://hema.jfrog.io'
pipeline{
    agent{
        node{
            label "jenkins_node"
        }
    }
    environment {
            PATH = "/opt/apache-maven-3.8.7/bin:$PATH"
    }
    stages{
        stage ("Clone the code"){
            steps{
                git branch: 'main', url: 'https://github.com/codingitt/twittertrend.git'
            }
        }
        stage ("Build the code"){
            steps{
                sh 'mvn clean install'
            }
        }
        stage ("SonarQube Analysis"){
            environment {
                scannerHome = tool 'Java_SonarQube_Scanner'
            }
            steps{
                withSonarQubeEnv('sonarserver'){
                      sh "${scannerHome}/bin/sonar-scanner"
            
                }

            }
        }
             
         stage("Jar Publish") {
        steps {
            script {
                    echo '<--------------- Jar Publish Started --------------->'
                     def server = Artifactory.newServer url:registry+"/artifactory" ,  credentialsId:"Jfrog-token"
                     def properties = "buildid=${env.BUILD_ID},commitid=${GIT_COMMIT}";
                     def uploadSpec = """{
                          "files": [
                            {
                              "pattern": "jarstaging/(*)",
                              "target": "taxi_grabber-libs-release-local/{1}",
                              "flat": "false",
                              "props" : "${properties}",
                              "exclusions": [ "*.sha1", "*.md5"]
                            }
                         ]
                     }"""
                     def buildInfo = server.upload(uploadSpec)
                     buildInfo.env.collect()
                     server.publishBuildInfo(buildInfo)
                     echo '<--------------- Jar Publish Ended --------------->'  
            
            }
        }   
    }   
  }
}
